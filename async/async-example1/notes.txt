Prequisites - callbacks 

Description of example: 
Demonstrate async method - settimeout, and how it delays the execution of the callback function 

Order of printing should be: 
- start 
- printsomestuff
- end
- we are in the time out
- we are in another time out


Go into the internals of how async methods are handled in JS
Callstack doesn't make sense - why doesn't settimeout get called before end?
  - setTimeout runs, exits and moves onto the console.log 
  - WEBAPI manages the wait time, and executes the callback once the time period has elapsed 



Callbacks are not always necessarily async 
const numbers = [1, 2, 3, 4, 5];
numbers.forEach(number => {
  console.log(number);
})


Additional followups:
What happens if we change the second setTimeout to 1 second? 
What if both are 1 second? - first will probably complete first